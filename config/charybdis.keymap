#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include "macros.dtsi"
#include "behaviors.dtsi"
#include "combos.dtsi"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    /* input config for mouse move mode */

    trackball_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <0 2 7>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <4>;
        scale-divisor = <5>;

        // bindings = <&ib_toggle_layer 7>;
    };

    /* input config for snipe mode */

    trackball_snipe_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <8>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <6>;
    };

    /* input config for mouse scroll mode */

    trackball_scroll_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <9>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;
        y-invert;
        bindings = <&ib_wheel_scaler 1 14>;
    };

    /* define a resolution down scaler only for INPUT_REL_WHEEL */

    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };

    /* adjust cooldown waiting period for mouse key layer after activated */

    ib_toggle_layer: ib_toggle_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <750>;
    };

    // ╭──────┬──────┬──────┬──────┬──────┬──────╮  ╭──────┬──────┬──────┬──────┬──────┬──────╮
    //    00     01     02     03    04      05        06     07     08     09     10     11
    // ├──────┼──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┼──────┤
    //    12     13     14     15    16      17        18     19     20     21     22     23
    // ├──────┼──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┼──────┤
    //    24     25     26     27    28      29        30     31     32     33     34     35
    // ╰──────┴──────┴──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┴──────┴──────┴──────╯
    //                         36     37     38        39     40
    //                      ╰──────┴──────┴──────╯  ╰──────┴──────╯
    // #define BASE    0
    // #define NUM     1
    // #define NAV     2
    // #define SYM     3
    // #define GAME    4
    // #define PHOTOS  5
    // #define EXTRAS  6
    // #define MOUSE   7
    // #define SLOW    8
    // #define SCROLL  9

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&none  &kp W  &kp L  &kp Y       &kp R      &kp B     &kp Z         &kp F      &kp O      &kp U       &kp SQT    &none
&none  &kp C  &kp R  &kp S       &kp T      &kp G     &kp M         &kp N      &kp E      &kp I       &kp A      &none
&none  &kp Q  &kp J  &kp V       &kp D      &kp K     &kp X         &kp H      &kp COMMA  &kp PERIOD  &kp SLASH  &none
                     &td_cursor  &mkp LCLK  &td_bs    &lt 0 RETURN  &td_space
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans        &trans        &trans    &trans  &trans        &trans  &trans        &trans  &trans
&trans  &kp N9  &kp N5  &kp NUMBER_1  &kp NUMBER_3  &trans    &trans  &kp NUMBER_2  &kp N0  &kp NUMBER_4  &kp N8  &trans
&trans  &trans  &trans  &trans        &kp N7        &trans    &trans  &kp NUMBER_6  &trans  &trans        &trans  &trans
                        &trans        &trans        &trans    &trans  &trans
            >;
        };

        NAV {
            bindings = <
&none   &none   &none   &none   &none   &none     &none     &none           &kp UP_ARROW  &none      &none    &none
&trans  &trans  &trans  &trans  &trans  &none     &kp HOME  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &kp END  &none
&none   &none   &none   &none   &none   &none     &none     &kp PAGE_DOWN   &none         &kp PG_UP  &none    &none
                        &none   &none   &trans    &trans    &trans
            >;
        };
    };
};
